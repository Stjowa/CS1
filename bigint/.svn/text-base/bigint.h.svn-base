/*
 * bigint.h
 *
 *  Created on: Jan 23, 2012
 *      Author: swalenti
 */
#include <string.h>

#ifndef SW_CS33001_BIGINT_H
#define SW_CS33001_BIGINT_H

class bigint {
public:
	bigint();
	bigint(int);
	bigint(char[]);
	void setMaxSize(int size);
	void toString();
	bool operator==(bigint);

private:
	int MAX_SIZE;
	int num, charLength;
	char *revNumList, *numList;
};

bigint::bigint(){
	//maxint = 2147483648
	numList[0]=0;
	MAX_SIZE=200;
}
bigint::bigint(int x){
	for (int i=1;i<=10 ;++i){

	}
	MAX_SIZE=200;
}
bigint::bigint(char *tempList){
	MAX_SIZE=200;
	charLength = strlen(tempList)-1;
	revNumList = new char[MAX_SIZE];
	numList = new char[MAX_SIZE];
	numList=tempList;
	for(int i=0; i<=charLength; ++i){
		revNumList[charLength-i]=tempList[i];
	}
}
void bigint::toString(){
	for(int i=0; i<=charLength && i<80; ++i){
			std::cout << numList[i];
		}
}
void bigint::setMaxSize(int size){
	MAX_SIZE=size;
}
bool bigint::operator==(bigint rhs){

	return false;
}
#endif /* SW_CS33001_BIGINT_H */
